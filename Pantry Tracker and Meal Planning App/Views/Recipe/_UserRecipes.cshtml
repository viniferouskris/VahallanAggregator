@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model List<RecipeViewModel>

<div class="row mb-4">
    <div class="col-12">
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle me-2"></i>Create New Recipe
        </a>
    </div>
</div>

<div class="row g-4">
    @if (!Model.Any())
    {
        <div class="col-12">
            <div class="alert alert-info">
                <p class="mb-0">You haven't created any recipes yet. Click "Create New Recipe" to get started!</p>
            </div>
        </div>
    }
    else
    {
        @foreach (var recipe in Model)
        {
            <div class="col-md-4 col-lg-3">
                <div class="card h-100 shadow-sm">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">@recipe.Name</h5>
                        <div class="btn-group">
                            <button class="btn btn-sm @(recipe.IsPublic ? "btn-outline-success" : "btn-outline-secondary") toggle-visibility"
                                    data-recipe-id="@recipe.Id"
                                    data-toggle="tooltip"
                                    title="@(recipe.IsPublic ? "Public" : "Private")">
                                <i class="bi @(recipe.IsPublic ? "bi-eye" : "bi-eye-slash")"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <p class="card-text text-muted">@recipe.Description</p>




                        <!-- NEW: Show collection -->
                        @if (!string.IsNullOrEmpty(recipe.Collection))
                        {
                            <span class="badge bg-secondary">@recipe.Collection</span>
                        }

                        <!-- NEW: Show accuracy level -->
                        <span class="badge bg-@(recipe.AccuracyLevel == RecipeAccuracyLevel.Secured ? "success" :
                               recipe.AccuracyLevel == RecipeAccuracyLevel.Tested ? "info" : "warning")">
                            @recipe.AccuracyLevel
                        </span>

                        <!-- NEW: Show if available as ingredient -->
                        @if (recipe.ShowInIngredientsList)
                        {
                            <span class="badge bg-info">Available as Ingredient</span>
                        }




                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                <i class="bi bi-clock me-1"></i>
                                @(recipe.PrepTime + recipe.CookTime) mins
                            </small>
                            <small class="text-muted">
                                <i class="bi bi-list-ol me-1"></i>
                                @recipe.IngredientsCount ingredients
                            </small>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex justify-content-between">
                            <a asp-action="Details" asp-controller="Recipe" asp-route-id="@recipe.Id" class="btn btn-sm btn-outline-primary">
                                <i class="bi bi-eye me-1"></i>View
                            </a>
                            <div>
                                <a asp-action="Edit" asp-route-id="@recipe.Id" class="btn btn-sm btn-outline-secondary me-2">
                                    <i class="bi bi-pencil me-1"></i>Edit
                                </a>
                                <button class="btn btn-sm btn-outline-danger delete-recipe" data-recipe-id="@recipe.Id">
                                    <i class="bi bi-trash me-1"></i>Delete
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>